{"version":3,"file":"embla-carousel-autoplay.esm.js","sources":["src/components/Options.ts","src/components/index.ts"],"sourcesContent":["import { CreateOptionsType } from 'embla-carousel/components/Options'\n\nexport type OptionsType = CreateOptionsType<{\n  delay: number\n  jump: boolean\n  playOnInit: boolean\n  stopOnInteraction: boolean\n  stopOnMouseEnter: boolean\n  stopOnLastSnap: boolean\n  rootNode: ((emblaRoot: HTMLElement) => HTMLElement | null) | null\n}>\n\nexport const defaultOptions: OptionsType = {\n  active: true,\n  breakpoints: {},\n  delay: 4000,\n  jump: false,\n  playOnInit: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  stopOnLastSnap: false,\n  rootNode: null,\n}\n\nexport type AutoplayOptionsType = Partial<OptionsType>\n","import { AutoplayOptionsType, defaultOptions, OptionsType } from './Options'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport EmblaCarousel, { EmblaCarouselType } from 'embla-carousel'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    autoplay?: AutoplayType\n  }\n}\n\nexport type AutoplayType = CreatePluginType<\n  {\n    play: (jump?: boolean) => void\n    stop: () => void\n    reset: () => void\n  },\n  OptionsType\n>\n\nfunction Autoplay(userOptions?: AutoplayOptionsType): AutoplayType {\n  const optionsHandler = EmblaCarousel.optionsHandler()\n  const optionsBase = optionsHandler.merge(\n    defaultOptions,\n    Autoplay.globalOptions,\n  )\n  let options: AutoplayType['options']\n  let carousel: EmblaCarouselType\n  let interaction: () => void\n  let timer = 0\n  let jump = false\n\n  function init(embla: EmblaCarouselType): void {\n    carousel = embla\n    options = optionsHandler.atMedia(self.options)\n    jump = options.jump\n    interaction = options.stopOnInteraction ? destroy : stop\n    const { eventStore } = carousel.internalEngine()\n    const emblaRoot = carousel.rootNode()\n    const root = (options.rootNode && options.rootNode(emblaRoot)) || emblaRoot\n\n    carousel.on('pointerDown', interaction)\n    if (!options.stopOnInteraction) carousel.on('pointerUp', reset)\n\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', interaction)\n      if (!options.stopOnInteraction) eventStore.add(root, 'mouseleave', reset)\n    }\n\n    eventStore.add(document, 'visibilitychange', () => {\n      if (document.visibilityState === 'hidden') return stop()\n      reset()\n    })\n    eventStore.add(window, 'pagehide', (event: PageTransitionEvent) => {\n      if (event.persisted) stop()\n    })\n\n    if (options.playOnInit) play()\n  }\n\n  function destroy(): void {\n    carousel.off('pointerDown', interaction)\n    if (!options.stopOnInteraction) carousel.off('pointerUp', reset)\n    stop()\n    timer = 0\n  }\n\n  function play(jumpOverride?: boolean): void {\n    stop()\n    if (typeof jumpOverride !== 'undefined') jump = jumpOverride\n    timer = window.setTimeout(next, options.delay)\n  }\n\n  function stop(): void {\n    if (!timer) return\n    window.clearTimeout(timer)\n  }\n\n  function reset(): void {\n    if (!timer) return\n    stop()\n    play()\n  }\n\n  function next(): void {\n    const { index } = carousel.internalEngine()\n    const kill = options.stopOnLastSnap && index.get() === index.max\n\n    if (kill) return destroy()\n\n    if (carousel.canScrollNext()) {\n      carousel.scrollNext(jump)\n    } else {\n      carousel.scrollTo(0, jump)\n    }\n    play()\n  }\n\n  const self: AutoplayType = {\n    name: 'autoplay',\n    options: optionsHandler.merge(optionsBase, userOptions),\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n  }\n  return self\n}\n\nAutoplay.globalOptions = <AutoplayOptionsType | undefined>undefined\n\nexport default Autoplay\n"],"names":["defaultOptions","active","breakpoints","delay","jump","playOnInit","stopOnInteraction","stopOnMouseEnter","stopOnLastSnap","rootNode","Autoplay","userOptions","optionsHandler","EmblaCarousel","optionsBase","merge","globalOptions","options","carousel","interaction","timer","init","embla","atMedia","self","destroy","stop","eventStore","internalEngine","emblaRoot","root","on","reset","add","document","visibilityState","window","event","persisted","play","off","jumpOverride","setTimeout","next","clearTimeout","index","kill","get","max","canScrollNext","scrollNext","scrollTo","name","undefined"],"mappings":"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"}